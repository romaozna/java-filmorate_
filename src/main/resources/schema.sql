CREATE TABLE IF NOT EXISTS USERS (
    USER_ID      INTEGER AUTO_INCREMENT PRIMARY KEY,
    EMAIL        VARCHAR(25) UNIQUE NOT NULL,
    USER_LOGIN   VARCHAR(20) NOT NULL,
    USER_NAME    VARCHAR(20),
    BIRTHDAY     DATE
);

CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID       INTEGER AUTO_INCREMENT PRIMARY KEY ,
    MPA_NAME     VARCHAR(5) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID     INTEGER AUTO_INCREMENT PRIMARY KEY,
    NAME         VARCHAR(15) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID      INTEGER AUTO_INCREMENT PRIMARY KEY,
    FILM_NAME    VARCHAR(40) NOT NULL,
    DESCRIPTION  VARCHAR(200),
    RELEASE_DATE DATE NOT NULL,
    DURATION     INTEGER NOT NULL,
    FILM_RATE    INTEGER NOT NULL,
    MPA INTEGER  NOT NULL,
    FOREIGN KEY (MPA) REFERENCES MPA (MPA_ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
    FILM_ID      INTEGER NOT NULL,
    GENRE_ID     INTEGER NOT NULL,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
    USER_ID      INTEGER NOT NULL,
    FILM_ID      INTEGER NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
    USER_ID      INTEGER NOT NULL,
    FRIEND_ID    INTEGER NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (FRIEND_ID) REFERENCES users (USER_ID) ON DELETE CASCADE
);